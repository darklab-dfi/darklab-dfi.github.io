{"remainingRequest":"C:\\Users\\johnw\\OneDrive\\@UST\\Lecture Notes\\Yr4 Lecture Notes\\ISOM 4400\\pwc-dfi\\pwc-dfi\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\johnw\\OneDrive\\@UST\\Lecture Notes\\Yr4 Lecture Notes\\ISOM 4400\\pwc-dfi\\pwc-dfi\\client\\src\\pages\\Cloud_Buckets.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\johnw\\OneDrive\\@UST\\Lecture Notes\\Yr4 Lecture Notes\\ISOM 4400\\pwc-dfi\\pwc-dfi\\client\\src\\pages\\Cloud_Buckets.vue","mtime":1619534232816},{"path":"C:\\Users\\johnw\\OneDrive\\@UST\\Lecture Notes\\Yr4 Lecture Notes\\ISOM 4400\\pwc-dfi\\pwc-dfi\\client\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\johnw\\OneDrive\\@UST\\Lecture Notes\\Yr4 Lecture Notes\\ISOM 4400\\pwc-dfi\\pwc-dfi\\client\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\johnw\\OneDrive\\@UST\\Lecture Notes\\Yr4 Lecture Notes\\ISOM 4400\\pwc-dfi\\pwc-dfi\\client\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\johnw\\OneDrive\\@UST\\Lecture Notes\\Yr4 Lecture Notes\\ISOM 4400\\pwc-dfi\\pwc-dfi\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\johnw\\OneDrive\\@UST\\Lecture Notes\\Yr4 Lecture Notes\\ISOM 4400\\pwc-dfi\\pwc-dfi\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi52LWNhcmRfX3RpdGxlIHsNCiAgY29sb3I6IHJnYig2MiwgMTY5LCAxMjApIWltcG9ydGFudDsNCn0NCg=="},{"version":3,"sources":["Cloud_Buckets.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgVA;AACA;AACA","file":"Cloud_Buckets.vue","sourceRoot":"src/pages","sourcesContent":["<template>\r\n    <div>\r\n        <!--input section -->\r\n        <v-form class=\"col-12\" ref=\"form\" @submit.prevent=\"getOutput\">\r\n        <br>\r\n        <v-text-field\r\n          label=\"Entity name\"\r\n          v-model=\"form.entityName\"\r\n          :rules=\"entityNameInputRules\"\r\n          :disabled=\"gettingData\"\r\n          solo\r\n        ></v-text-field>\r\n\r\n        <v-text-field\r\n          label=\"Domain name\"\r\n          v-model=\"form.searchDomain\"\r\n          :rules=\"searchDomainInputRules\"\r\n          :disabled=\"gettingData\"\r\n          solo\r\n        ></v-text-field>\r\n\r\n        <v-text-field\r\n          label=\"Keyword\"\r\n          v-model=\"form.keyword\"\r\n          :rules=\"keywordInputRules\"\r\n          :disabled=\"gettingData\"\r\n          solo\r\n        ></v-text-field>\r\n        <br>\r\n            <div class=\"row\">\r\n                <div class=\"col text-right\">\r\n                <v-btn\r\n                    :disabled=\"gettingData\"\r\n                    @click=\"resetForm\"\r\n                    light\r\n                >\r\n                    Cancel\r\n                </v-btn>\r\n                </div>\r\n                <div class=\"col text-left\">\r\n                <v-btn\r\n                    :disabled=\"!formIsValid\"\r\n                    :loading=\"gettingData\"\r\n                    type=\"submit\"\r\n                    dark\r\n                >\r\n                    Search\r\n                </v-btn>\r\n                </div>\r\n            </div>\r\n        </v-form>\r\n        <br>\r\n        <br>\r\n        <v-card>\r\n            <div class=\"cloud_buckets\">\r\n            <v-card-title>Buckets containing \" {{form.keyword}} \"</v-card-title>\r\n            <v-card-subtitle>Source(s): <strong>grayhatwarfare</strong></v-card-subtitle>\r\n            <!--Bucket names containing keyword-->\r\n                <div class=\"row\">\r\n                    <div class=\"col\">\r\n                    <GChart\r\n                        type=\"PieChart\"\r\n                        :data=\"outS31_top3_bucket.data\"\r\n                        :options=\"outS31_top3_bucket.options\"\r\n                    />\r\n                    </div>\r\n                    <div class=\"col\">\r\n                    <GChart\r\n                        type=\"ColumnChart\"\r\n                        :data=\"outS31_fileCount_byType.data\"\r\n                        :options=\"outS31_fileCount_byType.options\"\r\n                    />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </v-card>\r\n        <br>\r\n        <!--No. of files containing keyword by buckets-->\r\n        <v-card>\r\n            <v-card-title>Sensitive files containing \" {{form.keyword}} \"</v-card-title>\r\n            <v-card-subtitle>List of counts of sensitive files containing  <strong>\" {{form.keyword}} \"</strong> by bucket<br>\r\n                             Source(s): <strong>grayhatwarfare</strong></v-card-subtitle>\r\n            <div class=\"scroll\">\r\n                <v-simple-table fixed-header height=\"300px\">\r\n                    <template v-slot:default id=\"outS32\" class='text_left'>\r\n                    <thead>\r\n                    <tr>\r\n                        <th v-for=\"(key_, index) in Object.keys(outS32[0])\" :key=\"index\">{{key_}}</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    <tr v-for=\"(row, index) in outS32\" :key=\"index\">\r\n                        <td v-for=\"(key_, index) in Object.keys(outS32[0])\" :key=\"index\">{{row[key_]}}</td>\r\n                    </tr>\r\n                    </tbody>\r\n                    </template>\r\n                </v-simple-table>\r\n            </div>\r\n        </v-card>\r\n        <br>\r\n        <!--Dubious files-->\r\n        <v-card>\r\n            <v-card-title>Dubious files</v-card-title>\r\n            <v-card-subtitle>Source(s): <strong>grayhatwarfare, node-fetch</strong></v-card-subtitle>\r\n            <v-card-text>{{this.outS33_dubiousFile.length-1}} file(s) found.</v-card-text>\r\n            <div class=\"scroll\">\r\n                <v-simple-table fixed-header height=\"300px\">\r\n                    <template v-slot:default id=\"outS33_dubiousFile\" class='text_left'>\r\n                    <thead>\r\n                    <tr>\r\n                        <th v-for=\"(key_, index) in Object.keys(outS33_dubiousFile[0])\" :key=\"index\">{{key_}}</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    <tr v-for=\"(row, index) in outS33_dubiousFile\" :key=\"index\">\r\n                        <td v-for=\"(key_, index) in Object.keys(outS33_dubiousFile[0])\" :key=\"index\">{{row[key_]}}</td>\r\n                    </tr>\r\n                    </tbody>\r\n                    </template>\r\n                </v-simple-table>\r\n            </div>\r\n        </v-card>\r\n        <br>\r\n        <!--Files that cannot be connected-->\r\n        <v-card>\r\n            <v-card-title>Unconnectable files</v-card-title>\r\n           <v-card-subtitle>Source(s): <strong>grayhatwarfare, node-fetch</strong></v-card-subtitle>\r\n            <v-card-text>{{this.outS33_failConnected.length-1}} file(s) found.</v-card-text>\r\n            <div class=\"scroll\">\r\n                <v-simple-table fixed-header height=\"300px\">\r\n                    <template v-slot:default id=\"outS33_failConnected\" class='text_left'>\r\n                    <thead>\r\n                    <tr>\r\n                        <th v-for=\"(key_, index) in Object.keys(outS33_failConnected[0])\" :key=\"index\">{{key_}}</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    <tr v-for=\"(row, index) in outS33_failConnected\" :key=\"index\">\r\n                        <td v-for=\"(key_, index) in Object.keys(outS33_failConnected[0])\" :key=\"index\">{{row[key_]}}</td>\r\n                    </tr>\r\n                    </tbody>\r\n                    </template>\r\n                </v-simple-table>\r\n            </div>\r\n        </v-card>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport getOutput from \"@/services/getOutput\";\r\nimport * as d3 from \"d3\";\r\n\r\nexport default {\r\n  data() {\r\n    const defaultForm = Object.freeze({\r\n      entityName: \"\",\r\n      searchDomain: \"\",\r\n      keyword: \"\",\r\n    })\r\n\r\n    const defaultTable = [\r\n        {\"-\": '-', \"-\":'-', \"-\":'-'}\r\n    ]\r\n\r\n    return {\r\n      form: Object.assign({}, defaultForm),\r\n      entityNameInputRules: [\r\n        value => !!value || 'This field is required',\r\n        value => this.checkEntityNameValidity() || 'Entity name should not contain /\\\\\\. \"$*<>:|?'\r\n      ],\r\n      searchDomainInputRules: [\r\n        value => !!value || 'This field is required',\r\n        value => this.checkSearchDomainValidity() || 'Please skip https://www. or http://www. in your domain name',\r\n        value => value.includes(\".\") || 'This is not a valid domain name'\r\n      ],\r\n      keywordInputRules: [\r\n        value => !!value || 'This field is required',\r\n      ],\r\n      defaultForm,\r\n      gettingData: false,\r\n      panelDisabled: true,\r\n      outS31: [\r\n        {\"-\": '-', \"-\":'-', \"-\":'-'}\r\n    ],\r\n      outS32: defaultTable,\r\n      outS33_dubiousFile: defaultTable,\r\n      outS33_failConnected: defaultTable,\r\n      outS31_top3_bucket:{\r\n        data: [\r\n          [\"Buckets\",\"Number of files\"]\r\n        ],\r\n        options: {title:\"Top 3 buckets with largest file count\",theme: 'material',height:350}\r\n      },      \r\n      outS31_fileCount_byType:{\r\n        data: [\r\n          [\"Types\",\"Number of files\"]\r\n        ],\r\n        options: {title:\"File count by bucket type\",legend: { position: \"none\" },theme: 'material',height:350}\r\n      },\r\n      mongoDB: { password: \"jonathan\", database: \"ClientData\" }, //<------is this useful?\r\n    };\r\n  },\r\n  methods: {\r\n    resetForm() {\r\n      this.form = Object.assign({}, this.defaultForm)\r\n      this.$refs.form.reset()\r\n    },\r\n    notifyFinish() {\r\n      this.$notify({\r\n        message: \"Completed!\",\r\n        icon: \"ti-check\",\r\n        horizontalAlign: 'center',\r\n        verticalAlign: 'top',\r\n        type: \"success\",\r\n        timeout: 60000\r\n      })\r\n    },\r\n    async getOutput() {\r\n      this.gettingData = true;\r\n      this.panelDisabled = true;\r\n      const response = await getOutput.getOutput({\r\n        entityName: this.form.entityName,\r\n        searchDomain: this.form.searchDomain,\r\n        keyword: this.form.keyword\r\n      });\r\n      this.outS31 = response.data[\"outS31\"];\r\n      this.cleanOutS31()\r\n      this.outS32 = response.data[\"outS32\"];\r\n      this.cleanOutS32()\r\n      this.outS33_dubiousFile = response.data[\"outS33_dubiousFile\"];\r\n      this.cleanOutS33_dubiousFile()\r\n      this.outS33_failConnected = response.data[\"outS33_failConnected\"];\r\n      this.cleanOutS33_failConnected()\r\n      this.panelDisabled = false;\r\n      this.gettingData = false;\r\n      this.notifyFinish()\r\n    },\r\n    cleanOutS31(){\r\n      this.outS31 = this.outS31.map((e) => {\r\n        return {\r\n          Bucket: e.Bucket,\r\n          FileCount: e.FileCount,\r\n          BucketType: e.Type,\r\n        }\r\n      });\r\n    \r\n      //top 3 buckets pie chart\r\n      this.outS31_top3_bucket[\"data\"] = [[\"Buckets\",\"Number of files\"]];\r\n      var sortedFileCount = this.outS31.slice().sort((a, b) => d3.descending(a.FileCount, b.FileCount));\r\n      if (Array.isArray(sortedFileCount) && sortedFileCount.length > 3) {\r\n        for (var i = 0; i < 3; i++) {\r\n          this.outS31_top3_bucket[\"data\"].push([sortedFileCount[i][\"Bucket\"],sortedFileCount[i][\"FileCount\"]]);\r\n        };\r\n        sortedFileCount.shift();\r\n        sortedFileCount.shift();\r\n        sortedFileCount.shift();\r\n        var fileCount_others = d3.sum(sortedFileCount, d => d.FileCount);\r\n        this.outS31_top3_bucket[\"data\"].push([\"Others\",fileCount_others]);\r\n      } else {\r\n        while (Array.isArray(sortedFileCount) && sortedFileCount.length > 0) {\r\n          this.outS31_top3_bucket[\"data\"].push([sortedFileCount[0][\"Bucket\"],sortedFileCount[0][\"FileCount\"]]);\r\n          sortedFileCount.shift();\r\n        };\r\n      };\r\n      \r\n      //file count by bucket type bar chart\r\n      this.outS31_fileCount_byType[\"data\"] = [[\"Types\",\"Number of files\"]];\r\n      var sumByType = d3.rollup(this.outS31, v => d3.sum(v, d => d.FileCount), d => d.BucketType);\r\n      for (var [key, value] of sumByType) {  //or sumByType.entries()\r\n        this.outS31_fileCount_byType[\"data\"].push([key,value]);\r\n      };\r\n    },\r\n    cleanOutS32() {\r\n      this.outS32 = this.outS32.map((e) => {\r\n        return {\r\n          Bucket: e.Bucket,\r\n          \"File count\": e.BucketCount\r\n        }\r\n      });\r\n    },\r\n    cleanOutS33_dubiousFile() {\r\n      this.outS33_dubiousFile = this.outS33_dubiousFile.map((e) => {\r\n        return {\r\n          \"File name\": e.Filename,\r\n          URL: e.Url,\r\n          \"Bucket type\": e.Type\r\n        }\r\n      });\r\n    },\r\n    cleanOutS33_failConnected() {\r\n      this.outS33_failConnected = this.outS33_failConnected.map((e) => {\r\n        return {\r\n          \"File name\": e.Filename,\r\n          URL: e.Url,\r\n          \"Bucket type\": e.Type\r\n        }\r\n      });\r\n    },\r\n    checkEntityNameValidity(){\r\n      return !(this.form.entityName.includes(\"/\") || this.form.entityName.includes(\"\\\\\")||\r\n      this.form.entityName.includes(\".\") || this.form.entityName.includes(\"\\\"\")||\r\n      this.form.entityName.includes(\"$\") || this.form.entityName.includes(\"*\")||\r\n      this.form.entityName.includes(\"<\") || this.form.entityName.includes(\">\")||\r\n      this.form.entityName.includes(\":\") || this.form.entityName.includes(\"|\")||\r\n      this.form.entityName.includes(\"?\"))\r\n    },\r\n    checkSearchDomainValidity(){\r\n      return !(this.form.searchDomain.includes(\"http://\") || this.form.searchDomain.includes(\"https://\")\r\n        || this.form.searchDomain.includes(\"www.\"))\r\n    },\r\n  },\r\n  computed: {\r\n    formIsValid () {\r\n      var noErrEntityName = this.form.entityName\r\n      var noErrSearchDomain = this.form.searchDomain\r\n      var noErrKeyword = this.form.keyword\r\n      if (noErrEntityName){\r\n        noErrEntityName = this.checkEntityNameValidity()\r\n      }\r\n      if (noErrSearchDomain){\r\n        noErrSearchDomain = this.checkSearchDomainValidity() || !this.form.searchDomain.includes(\".\")\r\n      }\r\n      if (noErrKeyword){\r\n        noErrKeyword = true\r\n      }\r\n      return (\r\n        noErrEntityName &&\r\n        noErrSearchDomain &&\r\n        noErrKeyword\r\n      )\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.v-card__title {\r\n  color: rgb(62, 169, 120)!important;\r\n}\r\n</style>"]}]}
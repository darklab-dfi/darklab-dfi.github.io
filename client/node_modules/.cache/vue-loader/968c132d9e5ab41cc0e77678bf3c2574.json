{"remainingRequest":"C:\\Users\\johnw\\OneDrive\\@UST\\Lecture Notes\\Yr4 Lecture Notes\\ISOM 4400\\pwc-dfi\\pwc-dfi\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\johnw\\OneDrive\\@UST\\Lecture Notes\\Yr4 Lecture Notes\\ISOM 4400\\pwc-dfi\\pwc-dfi\\client\\src\\pages\\Domains_Subdomains.vue?vue&type=style&index=0&lang=scss&","dependencies":[{"path":"C:\\Users\\johnw\\OneDrive\\@UST\\Lecture Notes\\Yr4 Lecture Notes\\ISOM 4400\\pwc-dfi\\pwc-dfi\\client\\src\\pages\\Domains_Subdomains.vue","mtime":1619534233087},{"path":"C:\\Users\\johnw\\OneDrive\\@UST\\Lecture Notes\\Yr4 Lecture Notes\\ISOM 4400\\pwc-dfi\\pwc-dfi\\client\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\johnw\\OneDrive\\@UST\\Lecture Notes\\Yr4 Lecture Notes\\ISOM 4400\\pwc-dfi\\pwc-dfi\\client\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\johnw\\OneDrive\\@UST\\Lecture Notes\\Yr4 Lecture Notes\\ISOM 4400\\pwc-dfi\\pwc-dfi\\client\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\johnw\\OneDrive\\@UST\\Lecture Notes\\Yr4 Lecture Notes\\ISOM 4400\\pwc-dfi\\pwc-dfi\\client\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\johnw\\OneDrive\\@UST\\Lecture Notes\\Yr4 Lecture Notes\\ISOM 4400\\pwc-dfi\\pwc-dfi\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\johnw\\OneDrive\\@UST\\Lecture Notes\\Yr4 Lecture Notes\\ISOM 4400\\pwc-dfi\\pwc-dfi\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLnYtY2FyZF9fdGl0bGUgew0KICBjb2xvcjogcmdiKDYyLCAxNjksIDEyMCkhaW1wb3J0YW50Ow0KfQ0K"},{"version":3,"sources":["Domains_Subdomains.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoWA;AACA;AACA","file":"Domains_Subdomains.vue","sourceRoot":"src/pages","sourcesContent":["<template>\r\n  <div>\r\n    <!--input section -->\r\n      <v-form class=\"col-12\" ref=\"form\" @submit.prevent=\"getOutput\">\r\n        <br>\r\n        <v-text-field\r\n          label=\"Entity name\"\r\n          v-model=\"form.entityName\"\r\n          :rules=\"entityNameInputRules\"\r\n          :disabled=\"gettingData\"\r\n          solo\r\n        ></v-text-field>\r\n\r\n        <v-text-field\r\n          label=\"Domain name\"\r\n          v-model=\"form.searchDomain\"\r\n          :rules=\"searchDomainInputRules\"\r\n          :disabled=\"gettingData\"\r\n          solo\r\n        ></v-text-field>\r\n\r\n        <v-text-field\r\n          label=\"Keyword\"\r\n          v-model=\"form.keyword\"\r\n          :rules=\"keywordInputRules\"\r\n          :disabled=\"gettingData\"\r\n          solo\r\n        ></v-text-field>\r\n        <br>\r\n        <div class=\"row\">\r\n          <div class=\"col text-right\">\r\n            <v-btn\r\n              :disabled=\"gettingData\"\r\n              @click=\"resetForm\"\r\n              light\r\n            >\r\n              Cancel\r\n            </v-btn>\r\n          </div>\r\n          <div class=\"col text-left\">\r\n            <v-btn\r\n              :disabled=\"!formIsValid\"\r\n              :loading=\"gettingData\"\r\n              type=\"submit\"\r\n              dark\r\n            >\r\n              Search\r\n            </v-btn>\r\n          </div>\r\n        </div>\r\n      </v-form>\r\n\r\n    <br>\r\n    <br>\r\n    <h3>Domains</h3>\r\n    <!--Domains with similar names-->\r\n    <v-card>\r\n      <div class=\"domain_similar_name\">\r\n        <v-card-title>Domain squatting</v-card-title>\r\n        <v-card-subtitle>List of all domains with names similar to <strong>{{form.searchDomain}}</strong><br>\r\n                         Source(s): <strong>Immuniweb</strong></v-card-subtitle>\r\n        <v-card-text><strong>{{countSimilarDomain}}</strong> domain(s) found. </v-card-text>\r\n        <div class=\"scroll\">\r\n            <v-simple-table fixed-header height=\"300px\">\r\n                <template v-slot:default id=\"outS19\" class='text_left'>\r\n                    <thead>\r\n                        <tr>\r\n                        <th v-for=\"(key_, index) in Object.keys(outS19[0])\" :key=\"index\">{{key_}}</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        <tr v-for=\"(row, index) in outS19\" :key=\"index\">\r\n                        <td v-for=\"(key_, index) in Object.keys(outS19[0])\" :key=\"index\">{{row[key_]}}</td>\r\n                        </tr>\r\n                    </tbody>\r\n                </template>\r\n            </v-simple-table>\r\n        </div>\r\n      </div>\r\n    </v-card>\r\n\r\n    <br>\r\n    <h3>Subdomains</h3>\r\n    <!--change panel color in header/content tag (background;word): style=\"background:#23B5C3;color:white\"-->\r\n    <!--non-production entry points-->\r\n     <v-card>\r\n      <v-card-title><strong>{{form.searchDomain}}</strong> Non-production entry points</v-card-title>\r\n      <v-card-subtitle>Source(s): <strong> securitytrails, dns, ipinfo, whatsmydns.net</strong></v-card-subtitle>\r\n        <!--distribution of subdomains pie chart-->\r\n        <GChart\r\n          type=\"PieChart\"\r\n          :data=\"outS12.data\"\r\n          :options=\"outS12.options\"\r\n        />\r\n    </v-card>\r\n    <br>\r\n    <v-card>\r\n      <v-card-title>Login Portals </v-card-title>\r\n      <v-card-subtitle>List of all <strong>{{form.searchDomain}}</strong> subdomains containing login portals<br>\r\n                        Source(s): <strong>node-fetch, securitytrails, dns, ipinfo, whatsmydns.net</strong></v-card-subtitle>\r\n      <v-card-text><strong>{{this.outS15.length-1}}</strong> subdomain(s) found.</v-card-text>\r\n      <v-simple-table fixed-header height=\"300px\">\r\n        <template v-slot:default>\r\n          <thead>\r\n            <tr>\r\n              <th v-for=\"(key_, index) in Object.keys(outS15[0])\" :key=\"index\">\r\n                {{key_}}\r\n              </th>\r\n            </tr>\r\n          </thead>>\r\n          <tbody>    \r\n            <tr v-for=\"(row, index) in outS15\" :key=\"index\"> \r\n              <td v-for=\"(key_, index) in Object.keys(outS15[0])\" :key=\"index\">{{row[key_]}}</td>\r\n            </tr>\r\n          </tbody>\r\n        </template>\r\n      </v-simple-table>\r\n    </v-card>\r\n    <br>\r\n    <v-card>\r\n      <v-card-title>Subdomains on SURBL/Spamhaus blocking list</v-card-title>\r\n       <v-card-subtitle>List of all <strong>{{form.searchDomain}}</strong> subdomains containing login portals<br>\r\n                        Source(s): <strong>feodotracker, urlhaus, securitytrails, dns, ipinfo, whatsmydns.net</strong></v-card-subtitle>\r\n      <v-card-text><strong>{{this.outS16.length-1}}</strong> subdomain(s) found.</v-card-text>\r\n      <v-simple-table fixed-header height=\"300px\">\r\n        <template v-slot:default>\r\n          <thead>\r\n            <tr>\r\n              <th v-for=\"(key_, index) in Object.keys(outS16[0])\" :key=\"index\">\r\n                {{key_}}\r\n              </th>\r\n            </tr>\r\n          </thead>>\r\n          <tbody>    \r\n            <tr v-for=\"(row, index) in outS16\" :key=\"index\"> \r\n              <td v-for=\"(key_, index) in Object.keys(outS16[0])\" :key=\"index\">{{row[key_]}}</td>\r\n            </tr>\r\n          </tbody>\r\n        </template>\r\n      </v-simple-table>\r\n    </v-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport getOutput from \"@/services/getOutput\";\r\nexport default {\r\n  data() {\r\n    const defaultForm = Object.freeze({\r\n      entityName: \"\",\r\n      searchDomain: \"\",\r\n      keyword: \"\",\r\n    })\r\n\r\n    const defaultTable = [\r\n        {\"-\": '-', \"-\":'-', \"-\":'-', \"-\":'-'}\r\n    ]\r\n\r\n    return {\r\n      form: Object.assign({}, defaultForm),\r\n      entityNameInputRules: [\r\n        value => !!value || 'This field is required',\r\n        value => this.checkEntityNameValidity() || 'Entity name should not contain /\\\\\\. \"$*<>:|?'\r\n      ],\r\n      searchDomainInputRules: [\r\n        value => !!value || 'This field is required',\r\n        value => this.checkSearchDomainValidity() || 'Please skip http://www. or https://www. in your domain name',\r\n        value => value.includes(\".\") || 'This is not a valid domain name'\r\n      ],\r\n      keywordInputRules: [\r\n        value => !!value || 'This field is required',\r\n      ],\r\n      defaultForm,\r\n      gettingData: false,\r\n      panelDisabled: true,\r\n      outS12: {\r\n        data: [\r\n          ['Entry point','No. of subdomains']\r\n        ],\r\n        options: {title:\"Distribution of subdomains by entry point type\",theme: 'material',height:350}\r\n      },\r\n      outS15: [{\"-\": '-', \"-\":'-', \"-\":'-', \"-\":'-','-':'-'}],\r\n      outS16: [{\"-\": '-', \"-\":'-', \"-\":'-', \"-\":'-',\r\n                        '-': '-', \"-\":'-', \"-\":'-', '-':'-'}] ,\r\n      outS19: [{'-':'-','-':'-'}],\r\n      /*outS31_fileCount_byType:{\r\n        data: [\r\n          [\"Types\",\"Number of files\"]\r\n        ],\r\n        //options: {chart:{title:\"File Count by Bucket Type\"},legend: { position: \"none\" }} <---material chart\r\n        options: {title:\"File count by bucket type\",legend: { position: \"none\" },theme: 'material',height:350}\r\n      },*/\r\n      countSimilarDomain: 0,\r\n      mongoDB: { password: \"jonathan\", database: \"ClientData\" }, //<------is this useful?\r\n    };\r\n  },\r\n  methods: {\r\n    resetForm() {\r\n      this.form = Object.assign({}, this.defaultForm)\r\n      this.$refs.form.reset()\r\n    },\r\n    notifyFinish() {\r\n      this.$notify({\r\n        message: \"Completed!\",\r\n        icon: \"ti-check\",\r\n        horizontalAlign: 'center',\r\n        verticalAlign: 'top',\r\n        type: \"success\",\r\n        timeout: 60000\r\n      })\r\n    },\r\n    async getOutput() {\r\n      this.gettingData = true;\r\n      this.panelDisabled = true;\r\n      const response = await getOutput.getOutput({\r\n        entityName: this.form.entityName,\r\n        searchDomain: this.form.searchDomain,\r\n        keyword: this.form.keyword\r\n      });\r\n      this.outS12 = response.data[\"outS12\"];\r\n      this.cleanOutS12()\r\n      this.outS15 = response.data[\"outS15\"];\r\n      this.cleanOutS15()\r\n      this.outS16 = response.data[\"outS16\"];\r\n      this.cleanOutS16()\r\n      this.outS19 = response.data[\"outS19\"];\r\n      this.cleanOutS19()\r\n      this.panelDisabled = false;\r\n      this.gettingData = false;\r\n      this.notifyFinish()\r\n    },\r\n    cleanOutS12(){\r\n      //distribution of subdomains pie chart\r\n      var c = 0;\r\n      var d = 0;\r\n      var e = 0;\r\n      var f = 0;\r\n      var g = 0;\r\n      var h = 0;\r\n      var j = 0;\r\n      for (var i = 0; i < this.outS12.length; i++) {\r\n        var dev_pos = this.outS12[i][\"Domain\"].toString().indexOf('dev');\r\n        var uat_pos = this.outS12[i][\"Domain\"].toString().indexOf('uat');\r\n        var qa_pos = this.outS12[i][\"Domain\"].toString().indexOf('qa');\r\n        var test_pos = this.outS12[i][\"Domain\"].toString().indexOf('test');\r\n        var stag_pos = this.outS12[i][\"Domain\"].toString().indexOf('stag');\r\n        var temp_pos = this.outS12[i][\"Domain\"].toString().indexOf('temp');\r\n        var tmp_pos = this.outS12[i][\"Domain\"].toString().indexOf('tmp');\r\n        if (dev_pos>-1){\r\n          c++;\r\n        }else if(uat_pos>-1){\r\n          d++;\r\n        }else if(qa_pos>-1){\r\n          e++;\r\n        }else if(test_pos>-1){\r\n          f++;\r\n        }else if(stag_pos>-1){\r\n          g++;\r\n        }else if(temp_pos>-1){\r\n          h++;\r\n        }else if(tmp_pos>-1){\r\n          j++;\r\n        };\r\n        this.outS12[\"data\"]=[\r\n          ['Entry point','No. of subdomains'],\r\n          ['dev',c],\r\n          ['uat',d],\r\n          ['qa',e],\r\n          ['test',f],\r\n          ['stag',g],\r\n          ['temp',h],\r\n          ['tmp',j]\r\n        ];\r\n     };\r\n    },\r\n    cleanOutS15() {\r\n      this.outS15 = this.outS15.map((e) => {\r\n        return {\r\n          Domain:e.Domain,\r\n          IP:e.IP,\r\n          ISP:e.ISP,\r\n          \"Host name\":e.hostname,\r\n        }\r\n      });\r\n    },\r\n    cleanOutS16(){\r\n        this.outS16 = this.outS16.map((e)=>{\r\n            return{\r\n                Domain: e.Domain,\r\n                IP:e.IP,\r\n                Botnet:e.Botnet,\r\n                \"Botnet Details\":e.Botnet_Details,\r\n                \"Malicious URL\":e.MaliciousURL,\r\n                \"SURBL Blacklist\":e.Malicious_SURBL_Blacklist,\r\n                \"Spamhaus Blacklist\":e.Malicious_Spamhaus_Blacklist,\r\n                \"Other Details\":e.Details,\r\n            }\r\n        })\r\n    },\r\n    cleanOutS19() {\r\n      this.outS19 = this.outS19.map((e) => {\r\n        return {\r\n          \"Domain Name\": e.Domain,\r\n          \"Server IP address\": e.ServerIP,\r\n        }\r\n      });\r\n      //count similar domains\r\n      this.countSimilarDomain=this.outS19.length;\r\n    },\r\n    checkEntityNameValidity(){\r\n      return !(this.form.entityName.includes(\"/\") || this.form.entityName.includes(\"\\\\\")||\r\n      this.form.entityName.includes(\".\") || this.form.entityName.includes(\"\\\"\")||\r\n      this.form.entityName.includes(\"$\") || this.form.entityName.includes(\"*\")||\r\n      this.form.entityName.includes(\"<\") || this.form.entityName.includes(\">\")||\r\n      this.form.entityName.includes(\":\") || this.form.entityName.includes(\"|\")||\r\n      this.form.entityName.includes(\"?\"))\r\n    },\r\n    checkSearchDomainValidity(){\r\n      return !(this.form.searchDomain.includes(\"http://\") || this.form.searchDomain.includes(\"https://\")\r\n        || this.form.searchDomain.includes(\"www.\"))\r\n    },\r\n    /*cleanOutS16(){\r\n      for(var i=0; i<this.outS16.length; i++){\r\n        if(!this.outS16[i].Botnet.includes('false') || !this.outS16[i].Botnet.includes(' ') || !this.outS16[i].MaliciousURL.includes('ok') || \r\n           !this.outS16[i].MaliciousURL.includes('N/A') || !this.outS16[i].MaliciousURL.includes(' ')){\r\n            this.outS16_cleaned['data'].push([this.outS16[i]['Domain'],this.outS16[i]['IP'],this.outS16[i]['Botnet'],this.outS16[i]['Botnet_Details'],\r\n                                              this.outS16[i]['MaliciousURL'],this.outS16[i]['Malicious_SURB_Blacklist'],\r\n                                              this.outS16[i]['Malicious_Spamhaus_Blacklist'],this.outS16[i]['Details']])\r\n          }\r\n      }\r\n    }*/\r\n  },\r\n  computed: {\r\n    formIsValid () {\r\n      var noErrEntityName = this.form.entityName\r\n      var noErrSearchDomain = this.form.searchDomain\r\n      var noErrKeyword = this.form.keyword\r\n      if (noErrEntityName){\r\n        noErrEntityName = this.checkEntityNameValidity()\r\n      }\r\n      if (noErrSearchDomain){\r\n        noErrSearchDomain = this.checkSearchDomainValidity() || !this.form.searchDomain.includes(\".\")\r\n      }\r\n      if (noErrKeyword){\r\n        noErrKeyword = true\r\n      }\r\n      return (\r\n        noErrEntityName &&\r\n        noErrSearchDomain &&\r\n        noErrKeyword\r\n      )\r\n    },\r\n  },\r\n};\r\n</script>\r\n<style lang='scss'>\r\n.v-card__title {\r\n  color: rgb(62, 169, 120)!important;\r\n}\r\n</style>\r\n"]}]}
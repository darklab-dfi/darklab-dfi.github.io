{"remainingRequest":"C:\\Users\\johnw\\OneDrive\\@UST\\Lecture Notes\\Yr4 Lecture Notes\\ISOM 4400\\pwc-dfi\\pwc-dfi\\client\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\johnw\\OneDrive\\@UST\\Lecture Notes\\Yr4 Lecture Notes\\ISOM 4400\\pwc-dfi\\pwc-dfi\\client\\src\\pages\\IP_Addresses.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"C:\\Users\\johnw\\OneDrive\\@UST\\Lecture Notes\\Yr4 Lecture Notes\\ISOM 4400\\pwc-dfi\\pwc-dfi\\client\\src\\pages\\IP_Addresses.vue","mtime":1619534233102},{"path":"C:\\Users\\johnw\\OneDrive\\@UST\\Lecture Notes\\Yr4 Lecture Notes\\ISOM 4400\\pwc-dfi\\pwc-dfi\\client\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\johnw\\OneDrive\\@UST\\Lecture Notes\\Yr4 Lecture Notes\\ISOM 4400\\pwc-dfi\\pwc-dfi\\client\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\johnw\\OneDrive\\@UST\\Lecture Notes\\Yr4 Lecture Notes\\ISOM 4400\\pwc-dfi\\pwc-dfi\\client\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\johnw\\OneDrive\\@UST\\Lecture Notes\\Yr4 Lecture Notes\\ISOM 4400\\pwc-dfi\\pwc-dfi\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\johnw\\OneDrive\\@UST\\Lecture Notes\\Yr4 Lecture Notes\\ISOM 4400\\pwc-dfi\\pwc-dfi\\client\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi52LWNhcmRfX3RpdGxlIHsNCiAgY29sb3I6IHJnYig2MiwgMTY5LCAxMjApIWltcG9ydGFudDsNCn0NCg=="},{"version":3,"sources":["IP_Addresses.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmSA;AACA;AACA","file":"IP_Addresses.vue","sourceRoot":"src/pages","sourcesContent":["<template>\r\n  <div>\r\n    <!--input section -->\r\n      <v-form class=\"col-12\" ref=\"form\" @submit.prevent=\"getOutput\">\r\n        <br>\r\n        <v-text-field\r\n          label=\"Entity name\"\r\n          v-model=\"form.entityName\"\r\n          :rules=\"entityNameInputRules\"\r\n          :disabled=\"gettingData\"\r\n          solo\r\n        ></v-text-field>\r\n\r\n        <v-text-field\r\n          label=\"Domain name\"\r\n          v-model=\"form.searchDomain\"\r\n          :rules=\"searchDomainInputRules\"\r\n          :disabled=\"gettingData\"\r\n          solo\r\n        ></v-text-field>\r\n\r\n        <v-text-field\r\n          label=\"Keyword\"\r\n          v-model=\"form.keyword\"\r\n          :rules=\"keywordInputRules\"\r\n          :disabled=\"gettingData\"\r\n          solo\r\n        ></v-text-field>\r\n\r\n        <br>\r\n        <div class=\"row\">\r\n          <div class=\"col text-right\">\r\n            <v-btn\r\n              :disabled=\"gettingData\"\r\n              @click=\"resetForm\"\r\n              light\r\n            >\r\n              Cancel\r\n            </v-btn>\r\n          </div>\r\n          <div class=\"col text-left\">\r\n            <v-btn\r\n              :disabled=\"!formIsValid\"\r\n              :loading=\"gettingData\"\r\n              type=\"submit\"\r\n              dark\r\n            >\r\n              Search\r\n            </v-btn>\r\n          </div>\r\n        </div>\r\n        <br>\r\n        <br>\r\n      </v-form>\r\n\r\n    <!--<br>\r\n    <br>\r\n    <v-card>\r\n      <v-data-table \r\n        :headers='headers'\r\n        :items='IP_records'\r\n        :items-per-page='10'\r\n      >\r\n      </v-data-table>\r\n    </v-card>-->\r\n    <br>\r\n    <!--change panel color in header/content tag (background;word): style=\"background:#23B5C3;color:white\"-->\r\n    <!--IP addresses with SSL chain records-->\r\n    <v-card>\r\n      <v-card-title>IP addresses with TLS/SSL certificates</v-card-title>\r\n      <v-card-subtitle>List of all <strong>{{this.form.entityName}}</strong> IP addresses with TLS/SSL certificates<br>\r\n                         Source(s): <strong>shodan</strong></v-card-subtitle>\r\n      <v-card-text><strong>{{this.outS110.length-1}}</strong> record(s) found.</v-card-text>\r\n        <v-simple-table fixed-header height=\"300px\">\r\n          <template v-slot:default>\r\n            <thead>\r\n              <tr>\r\n                <th v-for=\"(key_, index) in Object.keys(outS110[0])\" :key=\"index\">\r\n                  {{key_}}\r\n                </th>\r\n              </tr>\r\n            </thead>>\r\n            <tbody>    \r\n              <tr v-for=\"(row, index) in outS110\" :key=\"index\"> \r\n                <td v-for=\"(key_, index) in Object.keys(outS110[0])\" :key=\"index\">{{row[key_]}}</td>\r\n              </tr>\r\n            </tbody>\r\n          </template>\r\n        </v-simple-table>\r\n    </v-card>\r\n    <br>\r\n    <!--IP addresses using SSH/FTP/RDP protocols-->\r\n    <v-card>\r\n      <v-card-title>IP addresses using SSH/FTP/RDP protocols</v-card-title>\r\n      <v-card-subtitle>List of all {{this.form.entityName}} IP addresses using SSH/FTP/RDP protocols<br>\r\n                         Source(s): <strong>shodan, ipinfo</strong></v-card-subtitle>\r\n      <v-card-text><strong>{{this.outS14.length-1}}</strong> record(s) found.</v-card-text>\r\n      <v-simple-table fixed-header height=\"300px\">\r\n        <template v-slot:default>\r\n          <thead>\r\n            <tr>\r\n              <th v-for=\"(key_, index) in Object.keys(outS14[0])\" :key=\"index\">\r\n                {{key_}}\r\n              </th>\r\n            </tr>\r\n          </thead>>\r\n          <tbody>    \r\n            <tr v-for=\"(row, index) in outS14\" :key=\"index\"> \r\n              <td v-for=\"(key_, index) in Object.keys(outS14[0])\" :key=\"index\">{{row[key_]}}</td>\r\n            </tr>\r\n          </tbody>\r\n        </template>\r\n      </v-simple-table>\r\n    </v-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport getOutput from \"@/services/getOutput\";\r\nexport default {\r\n  data() {\r\n    const defaultForm = Object.freeze({\r\n      entityName: \"\",\r\n      searchDomain: \"\",\r\n      keyword: \"\",\r\n    })\r\n\r\n    const defaultTable = [\r\n        {\"-\": '-', \"-\":'-', \"-\":'-', \"-\":'-'}\r\n    ]\r\n\r\n    return {\r\n      /*headers:[\r\n        {\r\n            text: 'IP address',\r\n            align: 'start',\r\n            sortable: false,\r\n            value: 'Host',\r\n        },\r\n        { text: 'Protocol', value: 'Protocol' },\r\n        { text: 'Organization', value: 'Organization' },\r\n        { text: 'SSL certificate issuer', value: 'SSLCertIssuerCommonName' },\r\n        { text: 'Website title', value: 'WebsiteTitle' },\r\n        { text: 'SSL certificate signature algorithm', value: 'SSLCertSignatureAlgorithm' },\r\n        { text: 'CVE No.', value: 'NoCVE' },\r\n        { text: 'Highest CVSS score', value: 'Highest CVSS' },\r\n        { text: 'Corresponding CVE', value: 'CorrespondingCVE' },\r\n      ],\r\n      IP_records:[],*/\r\n      form: Object.assign({}, defaultForm),\r\n      entityNameInputRules: [\r\n        value => !!value || 'This field is required',\r\n        value => this.checkEntityNameValidity() || 'Entity name should not contain /\\\\\\. \"$*<>:|?'\r\n      ],\r\n      searchDomainInputRules: [\r\n        value => !!value || 'This field is required',\r\n        value => this.checkSearchDomainValidity() || 'Please skip http://www. or https://www. in your domain name',\r\n        value => value.includes(\".\") || 'This is not a valid domain name'\r\n      ],\r\n      keywordInputRules: [\r\n        value => !!value || 'This field is required',\r\n      ],\r\n      defaultForm,\r\n      gettingData: false,\r\n      panelDisabled: true,\r\n      outS110: [{\"-\": '-', \"-\":'-', \"-\":'-', \"-\":'-','-':'-',\r\n                 \"-\": '-', \"-\":'-', \"-\":'-', \"-\":'-','-':'-'}],\r\n      outS14: [{\"-\": '-', \"-\":'-', \"-\":'-', \"-\":'-','-':'-',\r\n                 \"-\": '-', \"-\":'-', \"-\":'-', \"-\":'-','-':'-'}],\r\n      mongoDB: { password: \"jonathan\", database: \"ClientData\" }, //<------is this useful?\r\n    };\r\n  },\r\n  methods: {\r\n    resetForm() {\r\n      this.form = Object.assign({}, this.defaultForm)\r\n      this.$refs.form.reset()\r\n    },\r\n    notifyFinish() {\r\n      this.$notify({\r\n        message: \"Completed!\",\r\n        icon: \"ti-check\",\r\n        horizontalAlign: 'center',\r\n        verticalAlign: 'top',\r\n        type: \"success\",\r\n        timeout: 60000\r\n      })\r\n    },\r\n    async getOutput() {\r\n      this.gettingData = true;\r\n      this.panelDisabled = true;\r\n      const response = await getOutput.getOutput({\r\n        entityName: this.form.entityName,\r\n        searchDomain: this.form.searchDomain,\r\n        keyword: this.form.keyword\r\n      });\r\n      this.outS110 = response.data[\"outS110\"];\r\n      this.cleanOutS110()\r\n      this.outS14 = response.data[\"outS14\"];\r\n      this.cleanOutS14()\r\n      this.panelDisabled = false;\r\n      this.gettingData = false;\r\n      this.notifyFinish()\r\n    },\r\n    cleanOutS110(){\r\n      this.outS110=this.outS110.map((e)=>{\r\n        return{\r\n          \"IP Address\": e.Host,\r\n          Protocol:e.Protocol,\r\n          Organization: e.Organization,\r\n          \"SSL certificate issuer\":e.SSLCertIssuerCommonName,\r\n          \"Website Title\":e.WebsiteTitle,\r\n          \"SSL certificate signature algorithm\": e.SSLCertSignatureAlgorithm,\r\n          \"CVE No.\": e.NoCVE,\r\n          \"Highest CVSS Score\": e.HighestCVSS,\r\n          \"Corresponding CVE\": e.CorrespondingCVE\r\n        }\r\n      })\r\n    },\r\n    cleanOutS14(){\r\n      this.outS14=this.outS14.map((e)=>{\r\n        return{\r\n          \"IP Address\": e.Host,\r\n          \"Host name\": e.HostName,\r\n          Port:e.Port,\r\n          Protocol:e.Protocol,\r\n          Service: e.Service,\r\n          \"Common platform enumeration CPE\":e.ComonPlatformEnumerationCPE,\r\n          \"Vulnerability details\":e.VulnerabilityDetails,\r\n          \"CVE No.\": e.NoCVE,\r\n          \"Highest CVSS Score\": e.HighestCVSS,\r\n          \"Corresponding CVE\": e.CorrespondingCVE\r\n        }\r\n      })\r\n    },\r\n    checkEntityNameValidity(){\r\n      return !(this.form.entityName.includes(\"/\") || this.form.entityName.includes(\"\\\\\")||\r\n      this.form.entityName.includes(\".\") || this.form.entityName.includes(\"\\\"\")||\r\n      this.form.entityName.includes(\"$\") || this.form.entityName.includes(\"*\")||\r\n      this.form.entityName.includes(\"<\") || this.form.entityName.includes(\">\")||\r\n      this.form.entityName.includes(\":\") || this.form.entityName.includes(\"|\")||\r\n      this.form.entityName.includes(\"?\"))\r\n    },\r\n    checkSearchDomainValidity(){\r\n      return !(this.form.searchDomain.includes(\"http://\") || this.form.searchDomain.includes(\"https://\")\r\n        || this.form.searchDomain.includes(\"www.\"))\r\n    },\r\n  },\r\n  computed: {\r\n    formIsValid () {\r\n      var noErrEntityName = this.form.entityName\r\n      var noErrSearchDomain = this.form.searchDomain\r\n      var noErrKeyword = this.form.keyword\r\n      if (noErrEntityName){\r\n        noErrEntityName = this.checkEntityNameValidity()\r\n      }\r\n      if (noErrSearchDomain){\r\n        noErrSearchDomain = this.checkSearchDomainValidity() || !this.form.searchDomain.includes(\".\")\r\n      }\r\n      if (noErrKeyword){\r\n        noErrKeyword = true\r\n      }\r\n      return (\r\n        noErrEntityName &&\r\n        noErrSearchDomain &&\r\n        noErrKeyword\r\n      )\r\n    },\r\n  },\r\n  /*async created () {\r\n    const IP_records = await getOutput.getOutput()\r\n    const promises = IP_records.map(async (e) => {\r\n      return{\r\n        \"IP Address\": e.Host,\r\n        Protocol:e.Protocol,\r\n        Organization: e.Organization,\r\n        \"SSL certificate issuer\":e.SSLCertIssuerCommonName,\r\n        \"Website Title\":e.WebsiteTitle,\r\n        \"SSL certificate signature algorithm\": e.SSLCertSignatureAlgorithm,\r\n        \"CVE No.\": e.NoCVE,\r\n        \"Highest CVSS Score\": e.HighestCVSS,\r\n        \"Corresponding CVE\": e.CorrespondingCVE\r\n      }\r\n    })\r\n\r\n    await Promise.all(promises)\r\n\r\n    this.IP_records = IP_records\r\n  }*/\r\n};\r\n</script>\r\n<style>\r\n.v-card__title {\r\n  color: rgb(62, 169, 120)!important;\r\n}\r\n</style>\r\n"]}]}